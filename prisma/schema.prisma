generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id             String    @id @default(uuid())
  nEmailUserID   Int?
  sEmail         String    @unique
  sPassword      String
  sFullName      String
  nCompanyID     String?
  dtExpiry       String?
  bSentReminder1 Int?
  bSentReminder2 Int?
  bSentReminder3 Int?
  sComanyName    String?
  sContactNo     Int?
  sPythaDongalNo String?
  bApproved      Int?
  bActive        Int?      @default(0)
  bEmailVerified Int       @default(0)
  bFixed         Int?      @default(0)
  nCreatedID     Int?
  dtCreated      DateTime? @default(now())
  nModifiedID    DateTime?
  dtModified     DateTime?
  image          String?
  role           UserRole  @default(USER)
  accounts       Account[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(uuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(uuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
